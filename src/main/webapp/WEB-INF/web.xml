<!DOCTYPE web-app PUBLIC
        "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
        "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://java.sun.com/xml/ns/javaee"
        xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
        xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
		http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
        id="WebApp_ID"
        version="2.5">
    <display-name>Archetype Created Web Application</display-name>

    <!--    Configurando a localização dos ficheiros de configuração do Spring-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            /WEB-INF/applicationContext.xml
            /WEB-INF/applicationContext-security.xml
        </param-value>
    </context-param>
    <!-- The org.springframework.web.context.ContextLoaderListener class usa
		um parametro de contexto chamado contextConfigLocation para determinar a localização
		do ficheiro de configuração spring. The context parameter é configurado usando
		o context-parameter elemento. O elemento context-param tem dois elementos filho
		que especifica os parameters e seus values.O elemento param-name especifica
		o nome do parameter. O elemento param-value especifica o valor desse paramentro -->
    <listener>
        <display-name>Spring Context Loader</display-name>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!--    end - Configurando od  ficheiros de configuração do Spring-->

    <!-- Spring Security -->
    <!-- Um filtro servlet captura todas as requisições do usuario e envia elas para
        os filtros de segurança configurados para se certificar que o acesso a esse recurso esta autorizado. -->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- //// -->
    <!-- ZK -->
    <listener>
        <description>ZK listener for session cleanup</description>
        <listener-class>org.zkoss.zk.ui.http.HttpSessionListener</listener-class>
    </listener>
    <servlet>
        <description>ZK loader for ZUML pages</description>
        <servlet-name>zkLoader</servlet-name>
        <servlet-class>org.zkoss.zk.ui.http.DHtmlLayoutServlet</servlet-class>

        <!-- Must. Specifies URI of the update engine (DHtmlUpdateServlet). It
            must be the same as <url-pattern> for the update engine. -->
        <init-param>
            <param-name>update-uri</param-name>
            <param-value>/zkau</param-value>
        </init-param>
        <!-- Optional. Specifies whether to compress the output of the ZK loader.
            It speeds up the transmission over slow Internet. However, if you configure
            a filter to post-processing the output, you might have to disable it. Default: true
            <init-param>
                <param-name>compress</param-name>
                <param-value>true</param-value>
            </init-param>
            -->


        <!-- [Optional] Specifies the default log level: OFF, ERROR, WARNING, INFO,
            DEBUG and FINER. If not specified, the system default is used.
            <init-param>
                <param-name>log-level</param-name>
                <param-value>OFF</param-value>
            </init-param> -->

        <load-on-startup>1</load-on-startup><!-- Must -->
    </servlet>

    <!--    A cima criamos um servlet, agora estamos dizendo quais os padrões de url (requisição) que devem usar este nosso servlet.-->
    <servlet-mapping>
        <servlet-name>zkLoader</servlet-name>
        <url-pattern>*.zul</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>zkLoader</servlet-name>
        <url-pattern>*.zhtml</url-pattern>
    </servlet-mapping>


    <!-- [Optional] Uncomment it if you want to use richlets.
        <servlet-mapping>
            <servlet-name>zkLoader</servlet-name>
            <url-pattern>/zk/*</url-pattern>
        </servlet-mapping> -->


    <servlet>
        <description>The asynchronous update engine for ZK</description>
        <servlet-name>auEngine</servlet-name>
        <servlet-class>org.zkoss.zk.au.http.DHtmlUpdateServlet</servlet-class>

        <!-- [Optional] Specifies whether to compress the output of the ZK loader.
            It speeds up the transmission over slow Internet. However, if your server
            will do the compression, you might have to disable it. Default: true
            <init-param>
                <param-name>compress</param-name>
                <param-value>true</param-value>
            </init-param> -->

        <!-- [Optional] Specifies the AU extension for particular prefix.
        <init-param>
                <param-name>extension0</param-name>
                <param-value>/upload=com.my.MyUploader</param-value>
        </init-param> -->
    </servlet>
    <servlet-mapping>
        <servlet-name>auEngine</servlet-name>
        <url-pattern>/zkau/*</url-pattern>
    </servlet-mapping>

    <!-- [Optional] Uncomment if you want to use the ZK filter to post process
        the HTML output generated by other technology, such as JSP and velocity.
        <filter>
            <filter-name>zkFilter</filter-name>
            <filter-class>org.zkoss.zk.ui.http.DHtmlLayoutFilter</filter-class>
            <init-param>
                <param-name>extension</param-name>
                <param-value>html</param-value>
            </init-param>
            <init-param>
                <param-name>compress</param-name>
                <param-value>true</param-value>
            </init-param>
        </filter>
        <filter-mapping>
            <filter-name>zkFilter</filter-name>
            <url-pattern>your URI pattern</url-pattern>
        </filter-mapping> -->
    <!-- //// -->

    <!-- ///////////// -->
    <!-- DSP (optional) Uncomment it if you want to use DSP However, it is turned
        on since zksandbox uses DSP to generate CSS.
        <servlet>
        <servlet-name>dspLoader</servlet-name>
        <servlet-class>org.zkoss.web.servlet.dsp.InterpreterServlet</servlet-class>
        <init-param>
        <param-name>class-resource</param-name>
        <param-value>true</param-value>
        </init-param>
        </servlet>
        <servlet-mapping>
        <servlet-name>dspLoader</servlet-name>
        <url-pattern>*.dsp</url-pattern>
        </servlet-mapping> -->

    <!-- /////////// -->
    <!-- [Optional] Session timeout -->
    <session-config>
        <session-timeout>60</session-timeout>
    </session-config>

    <!-- [Optional] MIME mapping -->
    <mime-mapping>
        <extension>doc</extension>
        <mime-type>application/vnd.ms-word</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>gif</extension>
        <mime-type>image/gif</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>htm</extension>
        <mime-type>text/html</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>html</extension>
        <mime-type>text/html</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>jpeg</extension>
        <mime-type>image/jpeg</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>jpg</extension>
        <mime-type>image/jpeg</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>js</extension>
        <mime-type>text/javascript</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>pdf</extension>
        <mime-type>application/pdf</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>png</extension>
        <mime-type>image/png</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>txt</extension>
        <mime-type>text/plain</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>xls</extension>
        <mime-type>application/vnd.ms-excel</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>xml</extension>
        <mime-type>text/xml</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>zhtml</extension>
        <mime-type>text/html</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>zul</extension>
        <mime-type>text/html</mime-type>
    </mime-mapping>

    <welcome-file-list>
        <welcome-file>index.zul</welcome-file>
        <welcome-file>index.zhtml</welcome-file>
        <welcome-file>index.html</welcome-file>
        <welcome-file>index.htm</welcome-file>
    </welcome-file-list>
</web-app>
