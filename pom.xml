<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.eacuamba</groupId>
    <artifactId>spring_security_with_zkoss</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>spring_security_with_zkoss Maven Webapp</name>
    <!-- FIXME change it to the project's website -->
    <url>http://www.spring_security_with_zkoss.eacuamba.com</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <!--Versions-->
        <zk.version>9.6.0</zk.version>
        <spring-security.version>5.3.4.RELEASE</spring-security.version>
        <spring-version>5.2.8.RELEASE</spring-version>
    </properties>

    <repositories>
        <repository>
            <id>ZK CE</id>
            <name>ZK CE Repository</name>
            <url>https://mavensync.zkoss.org/maven2</url>
        </repository>

        <repository>
            <id>Maven</id>
            <name>Maven Central</name>
            <url>https://repo.maven.apache.org/maven2/</url>
        </repository>
    </repositories>

    <dependencies>
        <!--
        O problema de conflito de dependencias no Maven pom.xml, como o maven resolve esse conflito?

        Imagina que tenha colocado duas deendencias no seu pom.xml e elas tem diversas dependencias, uma desses dependencias, as duas tem, assim o nosso pom.xml vai puxar duas dependencias iguais indirectamente, mas isso é um conflito, então como o maven resolve?

        O maven vai puxar a dependencia mais proxima do pom.xml, a dependencia indirecta mais proxima do root do pom.xml, assim se a dependencia A puxar logo a Dependencia Z então essa sera a que estará no nosso classpath.

        Caso queiramos uma dependencia mais antiga que a dependencia B tem indirectamente mais esta a um nivel muito baixo, devemos especificar directamente no nosso maven. por isso que temos muitas dependencias do maven neste pom.xml.

        O Spring Security depende da versão anterior do Spring Core e não da mais recente.
        -->

        <!-- begin - ZK dependencies -->
        <dependency>
            <groupId>org.zkoss.zk</groupId>
            <artifactId>zkbind</artifactId>
            <version>${zk.version}</version>
        </dependency>
        <dependency>
            <groupId>org.zkoss.zk</groupId>
            <artifactId>zul</artifactId>
            <version>${zk.version}</version>
        </dependency>
        <dependency>
            <groupId>org.zkoss.zk</groupId>
            <artifactId>zkplus</artifactId>
            <version>${zk.version}</version>
        </dependency>
        <dependency>
            <groupId>org.zkoss.zk</groupId>
            <artifactId>zhtml</artifactId>
            <version>${zk.version}</version>
        </dependency>
        <!-- end - ZK dependencies -->

        <!-- begin - ZK Spring dependencies -->
        <dependency>
            <groupId>org.zkoss.zk</groupId>
            <artifactId>zkspring-core</artifactId>
            <version>4.0.0</version>
        </dependency>
        <!-- end - ZK Spring dependencies -->

        <!-- begin - ZK Spring Security Dependencies-->
        <dependency>
            <groupId>org.zkoss.zk</groupId>
            <artifactId>zkspring-security</artifactId>
            <version>4.0.0</version>
        </dependency>
        <!-- end - ZK Spring Security Dependencies-->

        <!--        begin - Spring Security Config - usado para permitir configurar usando o arquivo de configuracao applicationContext-security-->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>${spring-security.version}</version>
        </dependency>
        <!--        end - Spring Security Config-->

        <!-- begin - Spring Security Core - Contem funcionalidade do autenticação e controlo de acesso, é o núcleo do Spring Security, esta é uma dependência fundamental para qualquer projeto que queira usar Spring Security-->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>${spring-security.version}</version>
        </dependency>
        <!-- end - Spring Security Core -->

        <!--        begin - Spring Security Web - Aqui temos filters e toda a infra estrutura importante para o spring security trabalhar com acessos usando URLs, também para controlar a nível do servlet-->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>${spring-security.version}</version>
        </dependency>
        <!--        end - Spring Security Web-->

        <!--        begin - Spring Core -  Visto que existe um conflito de dependência entre o Spring Security e o Spring Framework, devemos definir as dependências do Spring Framework no nível 0 do pom.xml, assim o maven ira carregar as dependência que estão no nível 0 e ignorar as mesmas que estão em outro nível.-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring-version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring-version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring-version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring-version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring-version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring-version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
            <version>${spring-version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring-version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring-version}</version>
        </dependency>

        <!--        begin - Spring ORM - Usado para trabalhar com banco de dados-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring-version}</version>
        </dependency>
        <!--        end - Spring ORM-->
        <!--        end - Spring Framework Core-->

        <!--        begin - slf4-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.7.21</version>
        </dependency>
        <!--        end - slf4j-->

        <!--        begin - hibernate-->
        <!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-core -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>5.6.1.Final</version>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>org.hibernate</groupId>-->
<!--            <artifactId>hibernate-entitymanager</artifactId>-->
<!--            <version>4.0.0.Final</version>-->
<!--        </dependency>-->
        <!--end - hibernate-->

        <!--        begin - MySQL Connector-->
        <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.27</version>
        </dependency>
        <!--end - MySQL connector-->


        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>4.0.1</version>
            <scope>compile</scope>
        </dependency>

    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
            <plugins>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.2.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
